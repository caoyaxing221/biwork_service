<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biwork.mapper.PaymentOrderMapper">
  <resultMap id="BaseResultMap" type="com.biwork.entity.PaymentOrder">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="payment_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="payment_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="payment_money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="payment_unit" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="payment_discount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="actual_money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="user_coin_address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="receive_coin_address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="payment_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="insert_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="state" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_no" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, payment_id, payment_name, payment_money, payment_unit, payment_discount, 
    actual_money, user_coin_address, receive_coin_address, payment_time, insert_time, 
    state, order_no
  </sql>
  <select id="selectByExample" parameterType="com.biwork.entity.PaymentOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>

    <if test="start !=0 or limit!=0">
    limit #{start},#{limit}</if>
  </select>
  <insert id="insertSelective" parameterType="com.biwork.entity.PaymentOrder">
    insert into payment_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="paymentId != null">
        payment_id,
      </if>
      <if test="paymentName != null">
        payment_name,
      </if>
      <if test="paymentMoney != null">
        payment_money,
      </if>
      <if test="paymentUnit != null">
        payment_unit,
      </if>
      <if test="paymentDiscount != null">
        payment_discount,
      </if>
      <if test="actualMoney != null">
        actual_money,
      </if>
      <if test="userCoinAddress != null">
        user_coin_address,
      </if>
      <if test="receiveCoinAddress != null">
        receive_coin_address,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="paymentId != null">
        #{paymentId,jdbcType=INTEGER},
      </if>
      <if test="paymentName != null">
        #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="paymentMoney != null">
        #{paymentMoney,jdbcType=DECIMAL},
      </if>
      <if test="paymentUnit != null">
        #{paymentUnit,jdbcType=VARCHAR},
      </if>
      <if test="paymentDiscount != null">
        #{paymentDiscount,jdbcType=DECIMAL},
      </if>
      <if test="actualMoney != null">
        #{actualMoney,jdbcType=DECIMAL},
      </if>
      <if test="userCoinAddress != null">
        #{userCoinAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiveCoinAddress != null">
        #{receiveCoinAddress,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.biwork.entity.PaymentOrderExample" resultType="java.lang.Integer">
    select count(*) from payment_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentId != null">
        payment_id = #{record.paymentId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentName != null">
        payment_name = #{record.paymentName,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentMoney != null">
        payment_money = #{record.paymentMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentUnit != null">
        payment_unit = #{record.paymentUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentDiscount != null">
        payment_discount = #{record.paymentDiscount,jdbcType=DECIMAL},
      </if>
      <if test="record.actualMoney != null">
        actual_money = #{record.actualMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.userCoinAddress != null">
        user_coin_address = #{record.userCoinAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveCoinAddress != null">
        receive_coin_address = #{record.receiveCoinAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.insertTime != null">
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment_order
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      payment_id = #{record.paymentId,jdbcType=INTEGER},
      payment_name = #{record.paymentName,jdbcType=VARCHAR},
      payment_money = #{record.paymentMoney,jdbcType=DECIMAL},
      payment_unit = #{record.paymentUnit,jdbcType=VARCHAR},
      payment_discount = #{record.paymentDiscount,jdbcType=DECIMAL},
      actual_money = #{record.actualMoney,jdbcType=DECIMAL},
      user_coin_address = #{record.userCoinAddress,jdbcType=VARCHAR},
      receive_coin_address = #{record.receiveCoinAddress,jdbcType=VARCHAR},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.biwork.entity.PaymentOrder">
    update payment_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="paymentId != null">
        payment_id = #{paymentId,jdbcType=INTEGER},
      </if>
      <if test="paymentName != null">
        payment_name = #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="paymentMoney != null">
        payment_money = #{paymentMoney,jdbcType=DECIMAL},
      </if>
      <if test="paymentUnit != null">
        payment_unit = #{paymentUnit,jdbcType=VARCHAR},
      </if>
      <if test="paymentDiscount != null">
        payment_discount = #{paymentDiscount,jdbcType=DECIMAL},
      </if>
      <if test="actualMoney != null">
        actual_money = #{actualMoney,jdbcType=DECIMAL},
      </if>
      <if test="userCoinAddress != null">
        user_coin_address = #{userCoinAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiveCoinAddress != null">
        receive_coin_address = #{receiveCoinAddress,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>