<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biwork.mapper.DepartmentMapper">
  <resultMap id="BaseResultMap" type="com.biwork.entity.Department">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="team_id" jdbcType="INTEGER" property="teamId" />
    <result column="inserttime" jdbcType="TIMESTAMP" property="inserttime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
    <resultMap id="TeamVoMap" type="com.biwork.vo.TeamVo">
      <id column="id" jdbcType="INTEGER" property="id" />
    	<result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, team_id, inserttime, updatetime, state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=INTEGER}
  </select>
   <select id="selectDepartmentList" parameterType="java.lang.Integer" resultMap="TeamVoMap">
    select 
    <include refid="Base_Column_List" />
    from department
    where team_id is null and state=0
     <if test="teamId != null">
     union 
	select * from department where  team_id = #{teamId,jdbcType=INTEGER} and state=0
     </if>
   </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.biwork.entity.Department">
    insert into department (id, name, team_id, 
      inserttime, updatetime, state
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{teamId,jdbcType=INTEGER}, 
      #{inserttime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.biwork.entity.Department">
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
      <if test="inserttime != null">
        inserttime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="inserttime != null">
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.biwork.entity.Department">
    update department
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="teamId != null">
        team_id = #{teamId,jdbcType=INTEGER},
      </if>
      <if test="inserttime != null">
        inserttime = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.biwork.entity.Department">
    update department
    set name = #{name,jdbcType=VARCHAR},
      team_id = #{teamId,jdbcType=INTEGER},
      inserttime = #{inserttime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>