<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biwork.mapper.FlowNodeMapper">
  <resultMap id="BaseResultMap" type="com.biwork.entity.FlowNode">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="flow_id" jdbcType="INTEGER" property="flowId" />
    <result column="no" jdbcType="INTEGER" property="no" />
    <result column="approver_id" jdbcType="INTEGER" property="approverId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="inserttime" jdbcType="TIMESTAMP" property="inserttime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <resultMap id="TeamVoMap" type="com.biwork.vo.TeamVo">
      <id column="approver_id" jdbcType="INTEGER" property="id" />
    	<result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Base_Column_List">
    id, flow_id, no, approver_id, state, inserttime, updatetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from flow_node
    where id = #{id,jdbcType=INTEGER}
  </select>
   <select id="selectByFlowId" parameterType="java.lang.Integer" resultMap="TeamVoMap">
    select 
    approver_id,name
    from flow_node a join member b on a.approver_id=b.user_id
    where flow_id = #{flowId,jdbcType=INTEGER} and a.state=0 order by no ASC
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from flow_node
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.biwork.entity.FlowNode">
    insert into flow_node (id, flow_id, no, 
      approver_id, state, inserttime, 
      updatetime)
    values (#{id,jdbcType=INTEGER}, #{flowId,jdbcType=INTEGER}, #{no,jdbcType=INTEGER}, 
      #{approverId,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{inserttime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.biwork.entity.FlowNode">
    insert into flow_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="flowId != null">
        flow_id,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="approverId != null">
        approver_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="inserttime != null">
        inserttime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="flowId != null">
        #{flowId,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        #{no,jdbcType=INTEGER},
      </if>
      <if test="approverId != null">
        #{approverId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="inserttime != null">
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.biwork.entity.FlowNode">
    update flow_node
    <set>
      <if test="flowId != null">
        flow_id = #{flowId,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=INTEGER},
      </if>
      <if test="approverId != null">
        approver_id = #{approverId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="inserttime != null">
        inserttime = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
   <update id="updateByFlowIdSelective" parameterType="com.biwork.entity.FlowNode">
    update flow_node
    <set>
      <if test="flowId != null">
        flow_id = #{flowId,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=INTEGER},
      </if>
      <if test="approverId != null">
        approver_id = #{approverId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="inserttime != null">
        inserttime = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where flow_id = #{flowId,jdbcType=INTEGER} and state=0;
  </update>
  <update id="updateByPrimaryKey" parameterType="com.biwork.entity.FlowNode">
    update flow_node
    set flow_id = #{flowId,jdbcType=INTEGER},
      no = #{no,jdbcType=INTEGER},
      approver_id = #{approverId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      inserttime = #{inserttime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>