<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biwork.mapper.EthTransferMapper">
  <resultMap id="BaseResultMap" type="com.biwork.entity.EthTransfer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="from" jdbcType="VARCHAR" property="from" />
    <result column="to" jdbcType="VARCHAR" property="to" />
    <result column="process_id" jdbcType="INTEGER" property="processId" />
    <result column="orderid" jdbcType="VARCHAR" property="orderid" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="currency_type" jdbcType="VARCHAR" property="currencyType" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="inserttime" jdbcType="TIMESTAMP" property="inserttime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="transfer_time" jdbcType="TIMESTAMP" property="transferTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.biwork.entity.EthTransfer">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, from, to, process_id, orderid, amount, fee, currency_type, state, type, 
    inserttime, updatetime, transfer_time, finish_time
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from eth_transfer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from eth_transfer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.biwork.entity.EthTransfer">
    insert into eth_transfer (id, user_id, from, 
      to, process_id, orderid, 
      amount, fee, currency_type, 
      state, type, inserttime, 
      updatetime, transfer_time, finish_time, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{from,jdbcType=VARCHAR}, 
      #{to,jdbcType=VARCHAR}, #{processId,jdbcType=INTEGER}, #{orderid,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL}, #{fee,jdbcType=DECIMAL}, #{currencyType,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{inserttime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{transferTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.biwork.entity.EthTransfer">
    insert into eth_transfer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="from != null">
        from,
      </if>
      <if test="to != null">
        to,
      </if>
      <if test="processId != null">
        process_id,
      </if>
      <if test="orderid != null">
        orderid,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="currencyType != null">
        currency_type,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="inserttime != null">
        inserttime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="transferTime != null">
        transfer_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="from != null">
        #{from,jdbcType=VARCHAR},
      </if>
      <if test="to != null">
        #{to,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        #{processId,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="currencyType != null">
        #{currencyType,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="inserttime != null">
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="transferTime != null">
        #{transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.biwork.entity.EthTransfer">
    update eth_transfer
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="from != null">
        from = #{from,jdbcType=VARCHAR},
      </if>
      <if test="to != null">
        to = #{to,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        process_id = #{processId,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        orderid = #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="currencyType != null">
        currency_type = #{currencyType,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="inserttime != null">
        inserttime = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="transferTime != null">
        transfer_time = #{transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.biwork.entity.EthTransfer">
    update eth_transfer
    set user_id = #{userId,jdbcType=VARCHAR},
      from = #{from,jdbcType=VARCHAR},
      to = #{to,jdbcType=VARCHAR},
      process_id = #{processId,jdbcType=INTEGER},
      orderid = #{orderid,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      fee = #{fee,jdbcType=DECIMAL},
      currency_type = #{currencyType,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      inserttime = #{inserttime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      transfer_time = #{transferTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.biwork.entity.EthTransfer">
    update eth_transfer
    set user_id = #{userId,jdbcType=VARCHAR},
      from = #{from,jdbcType=VARCHAR},
      to = #{to,jdbcType=VARCHAR},
      process_id = #{processId,jdbcType=INTEGER},
      orderid = #{orderid,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      fee = #{fee,jdbcType=DECIMAL},
      currency_type = #{currencyType,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      inserttime = #{inserttime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      transfer_time = #{transferTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>